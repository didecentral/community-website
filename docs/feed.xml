<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-07-04T10:47:26-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">DIDecentral Community Site</title><subtitle>A website where the contents of our discord server is published, and information on what we do, and how we do it.</subtitle><author><name>Your Name</name></author><entry><title type="html">DIDecentral Contributors Guide: Minimal-Mistakes-Jekyll Gem-Based Deploy</title><link href="http://localhost:4000/didecentral-contributors-guide-minimal-mistakes/" rel="alternate" type="text/html" title="DIDecentral Contributors Guide: Minimal-Mistakes-Jekyll Gem-Based Deploy" /><published>2019-07-04T00:00:00-04:00</published><updated>2019-07-04T00:00:00-04:00</updated><id>http://localhost:4000/didecentral-contributors-guide-minimal-mistakes</id><content type="html" xml:base="http://localhost:4000/didecentral-contributors-guide-minimal-mistakes/">&lt;p&gt;I’m creating this resource while I do the initial setup for DIDecentral, the Organization, to have its own web-site, to accompany the website, &lt;a href=&quot;https://decentralized-id.com&quot;&gt;decentralized-id.com&lt;/a&gt;, we are co-creating.&lt;/p&gt;

&lt;p&gt;This will make it easier for contributors to understand how this site works, or even for you to use this guide and create your own web-site!&lt;/p&gt;

&lt;h2 id=&quot;why-minimal-mistakes&quot;&gt;Why Minimal Mistakes?&lt;/h2&gt;

&lt;p&gt;Generally speaking, I’d like to use and get to know a variety of themes and &lt;a href=&quot;https://web-work.tools/static-site-generators/&quot;&gt;static site generators&lt;/a&gt;. However, I’ve tried out Minimal Mistakes to publish large websites and small web-sites. It really works. It works well. So for building public-domain educational resources, I love it’s features. Much respect to it’s creator, &lt;a href=&quot;https://mademistakes.com/&quot;&gt;Michael Rose&lt;/a&gt;. I’ve used a few of his themes; they are well put together, and often ported to other SSGs besides Jekyll.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/docs/quick-start-guide/&quot;&gt;Minimal-Mistakes Quick-Start Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes/&quot;&gt;mmistakes/minimal-mistakes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/didecentral/decentralized-id.com&quot;&gt;didecentral/decentralized-id.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/didecenral/didecentral.github.io&quot;&gt;didecentral/didecentral.github.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pre-requisites&quot;&gt;Pre-requisites&lt;/h3&gt;

&lt;p&gt;You must have installed Git and the Ruby Bundler.&lt;/p&gt;

&lt;p&gt;I’ll also recommend using &lt;a href=&quot;https://web-work.tools/content-creation/&quot;&gt;VSCode&lt;/a&gt;, because it’s fully integrated with &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;, so that you don’t have to worrying about learning &lt;a href=&quot;https://web-work.tools/command-line-git-ssh/&quot;&gt;git commands&lt;/a&gt;, right away.&lt;/p&gt;

&lt;p&gt;Also, I usually create a new repository on github, first. Then I clone it locally, again, avoiding the terminal. Meaning I can learn git in more depth, at my leisure.&lt;/p&gt;

&lt;p&gt;Later there will be more complete guides on all the things, but for now, this should get most of our early contributors started fairly simply, and Infominer (that’s me:) is around to help if you get stuck with anything.&lt;/p&gt;

&lt;h3 id=&quot;site-structure&quot;&gt;&lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/docs/structure/&quot;&gt;Site Structure&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;This will give you a high-level view of site-structure, and I’ve linked to each directory, in its home repository, for easy access.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes/&quot;&gt;minimal-mistakes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;minimal-mistakes
├── _data                      # data files for customizing the theme
|  ├── navigation.yml          # main navigation links
|  └── ui-text.yml             # text used throughout the theme's UI
├── _includes
|  ├── analytics-providers     # snippets for analytics (Google and custom)
|  ├── comments-providers      # snippets for comments
|  ├── footer                  # custom snippets to add to site footer
|  ├── head                    # custom snippets to add to site head
|  ├── feature_row             # feature row helper
|  ├── gallery                 # image gallery helper
|  ├── group-by-array          # group by array helper for archives
|  ├── nav_list                # navigation list helper
|  ├── toc                     # table of contents helper
|  └── ...
├── _layouts
|  ├── archive-taxonomy.html   # tag/category archive for Jekyll Archives plugin
|  ├── archive.html            # archive base
|  ├── categories.html         # archive listing posts grouped by category
|  ├── category.html           # archive listing posts grouped by specific category
|  ├── collection.html         # archive listing documents in a specific collection
|  ├── compress.html           # compresses HTML in pure Liquid
|  ├── default.html            # base for all other layouts
|  ├── home.html               # home page
|  ├── posts.html              # archive listing posts grouped by year
|  ├── search.html             # search page
|  ├── single.html             # single document (post/page/etc)
|  ├── tag.html                # archive listing posts grouped by specific tag
|  ├── tags.html               # archive listing posts grouped by tags
|  └── splash.html             # splash page
├── _sass                      # SCSS partials
├── assets
|  ├── css
|  |  └── main.scss            # main stylesheet, loads SCSS partials from _sass
|  ├── images                  # image assets for posts/pages/collections/etc.
|  ├── js
|  |  ├── plugins              # jQuery plugins
|  |  ├── vendor               # vendor scripts
|  |  ├── _main.js             # plugin settings and other scripts to load after jQuery
|  |  └── main.min.js          # optimized and concatenated script file loaded before &amp;lt;/body&amp;gt;
├── _config.yml                # site configuration
├── Gemfile                    # gem file dependencies
├── index.html                 # paginated home page showing recent posts
└── package.json               # NPM build scripts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;css---stylesheets&quot;&gt;CSS - Stylesheets&lt;/h3&gt;

&lt;p&gt;At the moment, I’m quite CSS agnostic. One thing at a time.. However, if you wanted to add a little style to the page, I might not complain. This is how the sytlesheets are named \ organized.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/docs/stylesheets/&quot;&gt;mmistakes.github.io/minimal-mistakes/docs/stylesheets/&lt;/a&gt;
The theme’s assets/css/main.css file is built from several SCSS partials located in _sass/ and is structured as follows:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;minimal-mistakes
├── _sass
|  └── minimal-mistakes
|     ├── vendor               # vendor SCSS partials
|     |   ├── breakpoint       # media query mixins
|     |   ├── magnific-popup   # Magnific Popup lightbox
|     |   └── susy             # Susy grid system
|     ├── _animations.scss     # animations
|     ├── _archive.scss        # archives (list, grid, feature views)
|     ├── _base.scss           # base HTML elements
|     ├── _buttons.scss        # buttons
|     ├── _footer.scss         # footer
|     ├── _masthead.scss       # masthead
|     ├── _mixins.scss         # mixins (em function, clearfix)
|     ├── _navigation.scss     # nav links (breadcrumb, priority+, toc, pagination, etc.)
|     ├── _notices.scss        # notices
|     ├── _page.scss           # pages
|     ├── _print.scss          # print styles
|     ├── _reset.scss          # reset
|     ├── _sidebar.scss        # sidebar
|     ├── _syntax.scss         # syntax highlighting
|     ├── _tables.scss         # tables
|     ├── _utilities.scss      # utility classes (text/image alignment)
|     └── _variables.scss      # theme defaults (fonts, colors, etc.)
├── assets
|  ├── css
|  |  └── main.scss            # main stylesheet, loads SCSS partials in _sass


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;To make basic tweaks to theme’s style Sass variables can be overridden by adding to &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;your_project&amp;gt;/assets/css/main.scss&lt;/code&gt;. For instance, to change the link color used throughout the theme add:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;$link-color&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;red;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;_variablesscss&quot;&gt;&lt;a href=&quot;https://github.com/infominer33/infominer33.github.io/blob/master/_sass/minimal-mistakes/_variables.scss&quot;&gt;_variables.scss&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;There are a number of other variables, you may find by following the link. These are the variables I have changed, so far. Before messing with CSS please check the variables, to be sure you aren’t doing too much work!&lt;/p&gt;

&lt;h3 id=&quot;changing-the-font-size&quot;&gt;Changing the Font-Size&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes/issues/1219&quot;&gt;Upgrade-friendly way of adjusting font sizes globally&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;So what you can do is add any overriding/new CSS after the @import minimal-mistakes;, in your case:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
@import &quot;minimal-mistakes&quot;;

html {
  font-size: 16px; // change to whatever

  @include breakpoint($medium) {
    font-size: 18px; // change to whatever
  }

  @include breakpoint($large) {
    font-size: 20px; // change to whatever
  }

  @include breakpoint($x-large) {
    font-size: 22px; // change to whatever
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Because this theme is entirely responsive, if you want to change the font-size, you should do it like so.&lt;/p&gt;

&lt;h2 id=&quot;minimal-mistakes-initial-setup&quot;&gt;Minimal Mistakes Initial Setup&lt;/h2&gt;

&lt;p&gt;I clone minimal-mistakes into the same directory as whatever website I’m working on, so they are right next to eachother.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/mmistakes/minimal-mistakes.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://imgur.com/m8HG3Dg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then I copy over these files and directories to the folder that is linked to the github repository where I want to be able to publish it from:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://imgur.com/FAXK5SK.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I might delete some of the layouts and includes, later. test push I’m pretty sure all I need is a &lt;code class=&quot;highlighter-rouge&quot;&gt;gem-file&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;. The Gem Install means that GitHub will use a Ruby Gem Package that contains everything needed to run the website. You only need the files that you want to customize or configure somehow. For me, I usually need to change the head, and footer, as well as the social share, but I also change the home layout.. well you see it’s easier to just have them all to begin with, and later remove a few that I don’t need.&lt;/p&gt;

&lt;p&gt;Since I don’t know hardly anything about CSS, some contributors might want to work on that, and I will learn eventually, so I want those.&lt;/p&gt;

&lt;h3 id=&quot;gemfile&quot;&gt;Gemfile&lt;/h3&gt;

&lt;p&gt;The reason we are using the Gem version is because it keeps all the files up to date, if I’m not customizing them. Otherwise, a fork you have to occasionally strip out the old and update.. which isn’t necessarily a bad thing, if you’re still learning.&lt;/p&gt;

&lt;p&gt;I’m following the instructions for a gem based install from &lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/docs/quick-start-guide/&quot;&gt;Minimal-Mistakes Quick-Start Guide&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;First change the Gemfile so it looks like so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source 'https://rubygems.org'
gem &quot;jekyll&quot;
gem &quot;minimal-mistakes-jekyll&quot;

gem &quot;jekyll-paginate&quot;
gem &quot;jekyll-sitemap&quot;
gem &quot;jekyll-gist&quot;
gem &quot;jekyll-feed&quot;
gem &quot;jemoji&quot;
gem &quot;jekyll-include-cache&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, once saved, run the bundle command in the root directory of your project.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;
then
&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle update&lt;/code&gt;
then&lt;/p&gt;

&lt;h3 id=&quot;_configyml&quot;&gt;_config.yml&lt;/h3&gt;

&lt;p&gt;Then you must set the theme in your project’s Jekyll _config.yml file, you can see, I’ve simply uncommented that line. This should be everything we need to get started.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;theme                  : &quot;minimal-mistakes-jekyll&quot;
# remote_theme           : &quot;mmistakes/minimal-mistakes&quot;
minimal_mistakes_skin    : &quot;dirt&quot; # &quot;air&quot;, &quot;aqua&quot;, &quot;contrast&quot;, &quot;dark&quot;, &quot;dirt&quot;, &quot;neon&quot;, &quot;mint&quot;, &quot;plum&quot;, &quot;sunrise&quot;

# Site Settings
locale                   : &quot;en-US&quot;
title                    : &quot;DIDecentral Community Site&quot;
title_separator          : &quot;-&quot;
name                     : &quot;DIDecentral&quot;
description              : &quot;A website where the contents of our discord server is published, and information on what we do, and how we do it.&quot;
url                      : &quot;https://didecentral.com&quot;
baseurl                  : # the subpath of your site, e.g. &quot;/blog&quot;
repository               : didecentral/didecentral.github.io
github: [metadata] #enables access to your github metadata

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are plenty of other configurations, however, most of it is straightforward and I’ll mostly explain where it isn’t.&lt;/p&gt;

&lt;p&gt;First, if you are following very closely, a line must be removed from &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts/default.html&lt;/code&gt;, as it references a feature that hasn’t been included in the gem-based version, quite yet…&lt;/p&gt;</content><author><name>Your Name</name></author><summary type="html">I’m creating this resource while I do the initial setup for DIDecentral, the Organization, to have its own web-site, to accompany the website, decentralized-id.com, we are co-creating.</summary></entry></feed>